%freqtest: the GUI for FREQUENCY tests

%*******************************************************************************
%	The Graphical User Interface
%*******************************************************************************

pos_incr = 20;
%Figure window
if(~exist1('H..searchfig') &...
      ~exist1('H.ablfig') &...
      ~exist1('H.itdfig') &...
      ~exist1('H.ildfig') &...
      ~exist1('H.freqtestfig') &...
      ~exist1('H.ildfreqfig') &...
      ~exist1('H.spacefig') &...
      ~exist1('H.ildalonefig'))
   Xstim_control_pos = get(H.fig,'Position');
   freqtestfig_l = Xstim_control_pos(3) - 300; freqtestfig_wd = 350; freqtestfig_ht = 950;
   H.freqtestfig = figure('Units','pixels',...
      'Position',[freqtestfig_l 0 freqtestfig_wd freqtestfig_ht],...
      'Name','Frequency or Frequency Dropout Measurement',...
      'NumberTitle','off');
tot_ht = 0;
ind_ht = 20; tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht freqtestfig_wd ind_ht],...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'Frequency or Frequency Dropout Measurement');

%First Stimulus type: popupmenu
tot_ht = tot_ht + ind_ht*2;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 175 ind_ht],...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'Choose Stimulus Type');

H.freqstim_type = uicontrol('Style','popup',...
   'Units','pixels',...
   'Position',[175 freqtestfig_ht-tot_ht 175 ind_ht],...
   'BackgroundColor','white',...
   'Value', 2,...
   'String',...
   'Tone|Gammatone|Tone Stack|GammaTone Stack|NA|NA|NA|BroadBand Noise|NA|None',...
   'Callback','setinfo_freq');

%Frequency Information
tot_ht = tot_ht + ind_ht + 20;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht freqtestfig_wd ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Specify Frequency Parameters');
tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 80 ind_ht],...
   'String', 'Low Freq:');

H.lowfreq = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.lofreq),...
   'Callback','setInfo_Freq');
tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 80 ind_ht],...
   'String', 'High Freq:');

H.highfreq = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.hifreq),...
   'Callback','setInfo_Freq');
tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 80 ind_ht],...
   'String', 'Num Freqs:');

H.numfreqs = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.numfreqs),...
   'Callback','setInfo_Freq');
tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 80 ind_ht],...
   'String', 'Freq Step:');

H.stepfreq = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[82 freqtestfig_ht-tot_ht 60 ind_ht]);


%Other Stimulus Parameters
 tot_ht = tot_ht + ind_ht + pos_incr;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht freqtestfig_wd ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Set Remaining Parameters');
%ITD
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 110 ind_ht],...
   'String', 'ITD (us):');

H.ITD = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.curr_ITD));
%ILD
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 110 ind_ht],...
   'String', 'ILD (dB):');

H.ILD = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.curr_ILD));
%ABL
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 110 ind_ht],...
   'String', 'ABL (dB):');

H.ABL = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.curr_ABL));
%DUR
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 110 ind_ht],...
   'String', 'Stim Dur (ms):');

H.DUR = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.curr_stimdur));
%ISI
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 110 ind_ht],...
   'String', 'ISI (ms):');

H.ISI = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.test_ISI));
%NumReps
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 110 ind_ht],...
   'String', '# Reps:');

H.numreps = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 freqtestfig_ht-tot_ht 60 ind_ht],...
   'String', num2str(XStimParams.numreps),...
   'Callback','SetRepText');

% increment test number
H.inc_testnum = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[200 freqtestfig_ht-tot_ht 140 ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'INCREMENT testnum',...
   'Callback','setInfo_freq');


%Engage TEST
 tot_ht = tot_ht + ind_ht + pos_incr;
H.engagefreqtest = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 80 ind_ht],...
   'BackgroundColor','green',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'ENGAGE',...
   'Callback','Engage_freqtest');

%Record Data?

uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[85 freqtestfig_ht-tot_ht 100 ind_ht],...
   'String', 'Record Data?');
H.recorddata = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[190 freqtestfig_ht-tot_ht 30 ind_ht]);

H.recorddata_FN = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[85 freqtestfig_ht-(tot_ht+ind_ht) 100 ind_ht],...
   'ForegroundColor','blue',...
   'String', FN.data);

%Reset

H.resetfreqtest = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[freqtestfig_wd-100 freqtestfig_ht-tot_ht 80 ind_ht],...
   'BackgroundColor','cyan',...
   'ForegroundColor','black',...
   'FontWeight','bold',...
   'String', 'Reset',...
   'Callback','Reset_FREQtest');

%Pause TEST
 tot_ht = tot_ht + ind_ht + pos_incr;
H.pausefreqtest = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 80 ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Pause');

%Exit

H.exitfreqtest = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[freqtestfig_wd-100 freqtestfig_ht-tot_ht 80 ind_ht],...
   'BackgroundColor','red',...
   'ForegroundColor','yellow',...
   'FontWeight','bold',...
   'String', 'EXIT',...
   'Callback','Exit_freqtest');

%Build/Play Trials
 tot_ht = tot_ht + ind_ht + pos_incr;
H.buildplay = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 175 ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','blue',...
   'String', 'Build/Play Status');

%Remaining Reps and Trials
 tot_ht = tot_ht + ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 100 ind_ht],...
   'String', 'Remaining reps:');
H.remreps = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[102 freqtestfig_ht-tot_ht 40 ind_ht],...
   'String', get(H.numreps,'String'));
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[144 freqtestfig_ht-tot_ht 80 ind_ht],...
   'String', 'Trials:');
H.remtrials = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[226 freqtestfig_ht-tot_ht 40 ind_ht],...
   'String', '');

%Plotting
 tot_ht = tot_ht + ind_ht + pos_incr;
H.plotpsd = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[0 freqtestfig_ht-tot_ht 175 ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Plot PSD');

end %end GUI specification

stimuli_dir = FN.temp_stim_path;
setInfo_Freq;

% Initialize Application and get AP2 and XBUS locks
if(S232('S2init', 0, 'INIT_PRIMARY', 10000) == 0)
   disp('Cannot initialize a secondary process')
   return;
end

if(S232('APlock', 100, 0) == 0)
  disp('Cannot acquire lock on AP2 Card')
  s232('S2close');
  return;
end

if(S232('XBlock', 100, 0) == 0)
  disp('Cannot acquire lock on X Bus')
  s232('APunlock', 0);
  s232('S2close');
  return;
end
