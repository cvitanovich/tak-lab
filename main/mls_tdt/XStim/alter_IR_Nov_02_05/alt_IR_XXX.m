%altIR: the GUI for altIR tests

%*******************************************************************************
%	The Graphical User Interface
%*******************************************************************************

GUI.locations1 = [];
GUI.locations2 = [];
cF = round(1000*exp(log(2)*([3:10]/3)));
XStimParams.reset_flag = 0;

F.pos_incr = 20;
F.tot_ht = 0;
F.ind_ht = 20; 
%Figure window
if(~exist1('H.searchfig') &...
      ~exist1('H.ablfig') &...
      ~exist1('H.itdfig') &...
      ~exist1('H.ildfig') &...
      ~exist1('H.ildfreqfig') &...
      ~exist1('H.altIRfig'))
   temp = get(H.fig,'Position');
   F.altIR_l = temp(3) - 300; 
   F.altIR_wd = 400; 
   F.altIR_ht = 950;
   H.altIRfig = figure('Units','pixels',...
      'Position',[F.altIR_l 0 F.altIR_wd F.altIR_ht],...
      'Name','Space or ILDAlone Measurement with Alterred IRs',...
      'NumberTitle','off');

F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht F.altIR_wd F.ind_ht],...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'Virtual Auditory Space Measurement with Alterred IRs');

%reminder
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht F.altIR_wd F.ind_ht],...
   'ForegroundColor','blue',...
   'String', 'Earphone Inverse Filters loaded to DSPs');

%Specify HRTF and Location files
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht F.altIR_wd F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Specify Files');

%Fully-cued HRTF file
F.tot_ht = F.tot_ht + F.ind_ht;
H.spacefilehdr = uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Position',[0 F.altIR_ht-F.tot_ht 120 F.ind_ht],...
   'String', 'Fully-cued HRTF File:');
H.spacefile = uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Position',[120 F.altIR_ht-F.tot_ht fig_wd-120 F.ind_ht],...
   'HorizontalAlignment','left',...
   'ForegroundColor','blue',...
   'String', FN.space);
F.tot_ht = F.tot_ht + F.ind_ht;
H.spacefilepb = uicontrol('Parent',H.altIRfig,...
   'Style','pushbutton',...
   'Units','pixels',...
   'Position',[2 F.altIR_ht-F.tot_ht 195 F.ind_ht],...
   'BackgroundColor','red',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Select Fully-cued Filter File',...
   'Callback','setInfo_altIR');

uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[200 F.altIR_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'Fully-cued Test');
H.spaceflag = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[315 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
   'Value',XStimParams.space_flag,...
   'Callback','setInfo_altIR');

%ILDAlone filter file
F.tot_ht = F.tot_ht + F.ind_ht + 20;
H.ildalonefilehdr = uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Position',[0 F.altIR_ht-F.tot_ht 120 F.ind_ht],...
    'ForegroundColor','blue',...
   'String', 'ILDAlone File:');
H.ildalonefile = uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Position',[120 F.altIR_ht-F.tot_ht fig_wd-120 F.ind_ht],...
   'HorizontalAlignment','left',...
   'ForegroundColor','blue',...
   'String', FN.ildalone);
F.tot_ht = F.tot_ht + F.ind_ht;
H.ildalonepb = uicontrol('Parent',H.altIRfig,...
   'Style','pushbutton',...
   'Units','pixels',...
   'Position',[2 F.altIR_ht-F.tot_ht 195 F.ind_ht],...
   'BackgroundColor','red',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Select ILDAlone Filter File',...
   'Callback','setinfo_altIR');

uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[200 F.altIR_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'ILDAlone Test');
H.ildaloneflag = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[315 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
   'Value',~(XStimParams.space_flag),...
   'Callback','setInfo_altIR');

%Location Script File
F.tot_ht = F.tot_ht + F.ind_ht*2;
if 0
H.locscriptfilehdr = uicontrol('Parent',H.altIRfig,...
   	'Style','text',...
    'ForegroundColor','blue',...
   	'Position',[0 F.altIR_ht-F.tot_ht 150 F.ind_ht],...
   	'String', 'Location Script File:');
H.locscriptfile = uicontrol('Parent',H.altIRfig,...
   	'Style','text',...
   	'Position',[150 F.altIR_ht-F.tot_ht F.altIR_wd-150 F.ind_ht],...
   	'HorizontalAlignment','left',...
    'ForegroundColor','blue',...
   	'String', FN.script);
F.tot_ht = F.tot_ht + F.ind_ht;
H.locscriptfilepb = uicontrol('Parent',H.altIRfig,...
   	'Style','pushbutton',...
   	'Units','pixels',...
   	'Position',[2 F.altIR_ht-F.tot_ht 195 F.ind_ht],...
   	'BackgroundColor','red',...
   	'ForegroundColor','white',...
   	'FontWeight','bold',...
   	'String', 'Select Location Script File',...
   	'Callback','setinfo_altIR');
end
F.tot_ht = F.tot_ht + F.ind_ht;

% location picker
uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[200 F.altIR_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'Use Location Picker');
H.pickerflag = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[315 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
   'Value',XStimParams.picker_flag,...
   'Callback','setinfo_altIR');

% set stimulus params
F.tot_ht = F.tot_ht + F.ind_ht*2;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht F.altIR_wd F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Set Stimulus Parameters');
F.tot_ht = F.tot_ht + F.ind_ht;

H.altIR_stimFNpb = uicontrol('Parent',H.altIRfig,...
   	'Style','pushbutton',...
   	'Units','pixels',...
   	'Position',[2 F.altIR_ht-F.tot_ht 195 F.ind_ht],...
   	'BackgroundColor','red',...
   	'ForegroundColor','white',...
   	'FontWeight','bold',...
   	'String', 'Select Stimulus File',...
   	'Callback','setinfo_altIR');
H.altIR_stimFN = uicontrol('Parent',H.altIRfig,...
   	'Style','text',...
   	'Units','pixels',...
   	'Position',[F.altIR_wd-175 F.altIR_ht - F.tot_ht 175 F.ind_ht],...
   	'ForegroundColor','blue',...
   	'String', FN.stim);

F.tot_ht = F.tot_ht + F.ind_ht*2;

H.NBstackpb = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 150 F.ind_ht],...
   'BackgroundColor','red',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Bands for NBNoise Stack',...
   'Callback','NBNoiseStackBands');

F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 200 F.ind_ht],...
   'String', 'Bandwidth for BPNoise (octaves)');
H.bandwidth = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[205 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'BackgroundColor','white',...
   'String', num2str(XStimParams.bandwidth),...
   'Callback','SetBandWidth');
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 150 F.ind_ht],...
   'String', 'Bandlimits for NBNoise');
H.bandlimits1 = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[155 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','white',...
   'String', num2str(XStimParams.bandlimits(1)),...
   'Callback','SetBandLimits');
H.bandlimits2 = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[240 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','white',...
   'String', num2str(XStimParams.bandlimits(2)),...
   'Callback','SetBandLimits');

%ITD
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'ITD (us):');

H.ITD = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.curr_ITD));

uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[145 F.altIR_ht-F.tot_ht 150 F.ind_ht],...
   'String', 'Hold ITD constant?');
H.ITDchk = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[300 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
   'Value', XStimParams.space_flag);
%ABL
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'ABL (dB):');
H.ABL = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.curr_ABL));
%DUR
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'Stim Dur (ms):');
H.DUR = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.curr_stimdur));
%ISI
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'ISI (ms):');
H.ISI = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.test_ISI));
%NumReps
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', '# Reps:');
H.numreps = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.numreps),...
   'Callback','setinfo_altIR');



% control IR alteration
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[200 F.altIR_ht-F.tot_ht 70 F.ind_ht],...
   'String', 'Alter IRs?');
uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[270 F.altIR_ht-F.tot_ht 40 F.ind_ht],...
   'String', 'left IR');
H.alter_left = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[310 F.altIR_ht-F.tot_ht 20 F.ind_ht],...
   'Value',XStimParams.alter_left,...
   'Callback','setInfo_altIR');
uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[330 F.altIR_ht-F.tot_ht 40 F.ind_ht],...
   'String', 'right IR');
H.alter_right = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[370 F.altIR_ht-F.tot_ht 20 F.ind_ht],...
   'Value',XStimParams.alter_right,...
   'Callback','setInfo_altIR');
F.tot_ht = F.tot_ht + F.ind_ht;

uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[250 F.altIR_ht-F.tot_ht 100 F.ind_ht],...
   'String', 'arbitrary bands?');
H.alter_setbands = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[350 F.altIR_ht-F.tot_ht 20 F.ind_ht],...
   'Value',XStimParams.alter_setbands,...
   'Callback','setInfo_altIR');


% alter magnitude
F.tot_ht = F.tot_ht + F.ind_ht;
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Parent',H.altIRfig,...
   'Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', 'magnitude');
H.alterMag = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[60 F.altIR_ht-F.tot_ht 20 F.ind_ht],...
   'Value',XStimParams.alterMag,...
   'Callback','setInfo_altIR');
H.alterMag_dB = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[80 F.altIR_ht-F.tot_ht 40 F.ind_ht],...
   'BackgroundColor','white',...
   'String', num2str(XStimParams.alterMag_dB),...
   'Callback','setInfo_altIR');
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[120 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
   'String', 'dB');

uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[200 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', 'Bandlimits');
H.alterMag_Minbandlimits(1) = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[260 F.altIR_ht-F.tot_ht 70 F.ind_ht],...
   'BackgroundColor','white',...
   'String',XStimParams.alterMag_Minbandlimits(1),...
   'Callback','setInfo_altIR');
H.alterMag_Maxbandlimits(1) = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[330 F.altIR_ht-F.tot_ht 70 F.ind_ht],...
   'BackgroundColor','white',...
   'String',XStimParams.alterMag_Maxbandlimits(1),...
   'Callback','setInfo_altIR');


F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'Freq bands?');

for i = 1:8
    uicontrol('Style','text',...
    'Units','pixels',...
    'Position',[40+ i*40 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
    'String', num2str(cF(i)));
   
    F.tot_ht = F.tot_ht + F.ind_ht*.8;

    H.Mag_octlist(i) = uicontrol('Parent',H.altIRfig,...
    'Style','checkbox',...
    'Units','pixels',...
    'Position',[50+ i*40 F.altIR_ht-F.tot_ht 15 F.ind_ht],...
    'Value',XStimParams.Mag_octlistBIN(i),...
    'Callback','setInfo_altIR');
    F.tot_ht = F.tot_ht - F.ind_ht*.8;

end
F.tot_ht = F.tot_ht + F.ind_ht;



% alter phase
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', 'phase');
H.alterPhase = uicontrol('Parent',H.altIRfig,...
   'Style','checkbox',...
   'Units','pixels',...
   'Position',[60 F.altIR_ht-F.tot_ht 20 F.ind_ht],...
   'Value',XStimParams.alterPhase,...
   'Callback','setInfo_altIR');

H.alterPhase_rad= uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[80 F.altIR_ht-F.tot_ht 50 F.ind_ht],...
   'BackgroundColor','white',...
   'String', num2str(XStimParams.alterPhase_rad),...
   'Callback','setInfo_altIR');
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[130 F.altIR_ht-F.tot_ht 40 F.ind_ht],...
   'String', 'radians');

uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[200 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', 'Bandlimits');
H.alterPhase_Minbandlimits(1) = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[260 F.altIR_ht-F.tot_ht 70 F.ind_ht],...
   'BackgroundColor','white',...
   'String',XStimParams.alterMag_Minbandlimits(1),...
   'Callback','setInfo_altIR');
H.alterPhase_Maxbandlimits(1) = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[330 F.altIR_ht-F.tot_ht 70 F.ind_ht],...
   'BackgroundColor','white',...
   'String',XStimParams.alterMag_Maxbandlimits(1),...
   'Callback','setInfo_altIR');

F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'Freq bands?');

for i = 1:8
    uicontrol('Style','text',...
    'Units','pixels',...
    'Position',[40+ i*40 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
    'String', num2str(cF(i)));
   
    F.tot_ht = F.tot_ht + F.ind_ht*.8;

    H.Phase_octlist(i) = uicontrol('Parent',H.altIRfig,...
    'Style','checkbox',...
    'Units','pixels',...
    'Position',[50+ i*40 F.altIR_ht-F.tot_ht 15 F.ind_ht],...
    'Value',XStimParams.Phase_octlistBIN(i),...
    'Callback','setInfo_altIR');
    F.tot_ht = F.tot_ht - F.ind_ht*.8;

end
F.tot_ht = F.tot_ht + F.ind_ht;



% run test
F.tot_ht = F.tot_ht + F.ind_ht*2;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht F.altIR_wd F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Run Test');


%Engage TEST
F.tot_ht = F.tot_ht + F.ind_ht;
H.engagealtIR = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','green',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'ENGAGE',...
   'Callback','Engage_altIR');

%Record Data?
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[85 F.altIR_ht-F.tot_ht 100 F.ind_ht],...
   'String', 'Record Data?');
H.recorddata = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[190 F.altIR_ht-F.tot_ht 30 F.ind_ht],...
   'Callback','setInfo_altIR');
% increment test number
H.inc_testnum = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[250 F.altIR_ht-F.tot_ht 140 F.ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'INCREMENT testnum',...
   'Callback','setInfo_altIR');
%Record Data FN
F.tot_ht = F.tot_ht + F.ind_ht;
H.altIR_recorddata_FN = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[85 F.altIR_ht-F.tot_ht 100 F.ind_ht],...
   'ForegroundColor','blue',...
   'String', FN.data);


%Pause TEST
F.tot_ht = F.tot_ht + F.ind_ht;
H.pausealtIR = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Pause');

%Reset
H.resetaltIR = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[F.altIR_wd-100 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','cyan',...
   'ForegroundColor','black',...
   'FontWeight','bold',...
   'String', 'Reset',...
   'Callback','Reset_altIR');

%Build/Play Trials
F.tot_ht = F.tot_ht + F.ind_ht + F.pos_incr;
H.buildplay = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 175 F.ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','blue',...
   'String', 'Build/Play Status');

%Exit
H.exitaltIR = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[F.altIR_wd-100 F.altIR_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','red',...
   'ForegroundColor','yellow',...
   'FontWeight','bold',...
   'String', 'EXIT',...
   'Callback','Exit_altIR');

%Remaining Reps and Trials
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 140 F.ind_ht],...
   'String', '    Remaining   reps:');
H.remreps = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[142 F.altIR_ht-F.tot_ht 40 F.ind_ht],...
   'String', get(H.numreps,'String'));
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[184 F.altIR_ht-F.tot_ht 60 F.ind_ht],...
   'String', '   Trials:');
H.remtrials = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[246 F.altIR_ht-F.tot_ht 40 F.ind_ht],...
   'String', '');

%Plotting
F.tot_ht = F.tot_ht + F.ind_ht;
H.plotpsd = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[0 F.altIR_ht-F.tot_ht 175 F.ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','black',...
   'FontWeight','bold',...
   'String', 'Plot PSD');

end %end GUI specification

stimuli_dir = FN.temp_stim_path;

% Initialize Application and get AP2 and XBUS locks
if(S232('S2init', 0, 'INIT_PRIMARY', 20000) == 0)
   disp('Cannot initialize a secondary process')
   return;
end

if(S232('APlock', 100, 0) == 0)
  disp('Cannot acquire lock on AP2 Card')
  s232('S2close');
  return;
end

if(S232('XBlock', 100, 0) == 0)
  disp('Cannot acquire lock on X Bus')
  s232('APunlock', 0);
  s232('S2close');
  return;
end

SetInfo_altIR;