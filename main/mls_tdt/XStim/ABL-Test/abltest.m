%ABLTest: the GUI for ABL tests

%*******************************************************************************
%	The Graphical User Interface
%*******************************************************************************

XStimParams.reset_flag = 0;

%Figure window
if(~exist1('H.ablfig'))
   Xstim_control_pos = get(H.fig,'Position');
   F.fig_l = Xstim_control_pos(3) - 300; F.fig_wd = 350; F.fig_ht = 950;
   H.ablfig = figure('Units','pixels',...
      'Position',[F.fig_l 0 F.fig_wd F.fig_ht],...
      'Name','ABL Test',...
      'NumberTitle','off');
F.tot_ht = 0;
F.ind_ht = 20; F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht F.fig_wd F.ind_ht],...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'ABL Measurement');

%ABL Information
F.tot_ht = F.tot_ht + F.ind_ht*2;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht F.fig_wd F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Specify ABL Parameters');
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'Low ABL:');

H.lowabl = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.loabl),...
   'Callback','Setinfo_abl');
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'High ABL:');

H.highabl = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.hiabl),...
   'Callback','Setinfo_abl');

uicontrol('Parent',H.ablfig,...
    'Style','text',...
   'Units','pixels',...
   'Position',[150 F.fig_ht-F.tot_ht 100 F.ind_ht],...
   'String', 'Arbitrary ABLs:');
H.aritrary_abls = uicontrol('Parent',H.ablfig,...
'Style','checkbox',...
   'Units','pixels',...
   'Position',[250 F.fig_ht-F.tot_ht 20 F.ind_ht],...
   'Callback','setInfo_abl');
F.tot_ht = F.tot_ht + F.ind_ht;
H.ablvector_txt = uicontrol('Parent',H.ablfig,...
    'Style','text',...
   'Units','pixels',...
   'Position',[150 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', 'ABL vector:');
H.ablvector = uicontrol('Parent',H.ablfig,...
    'Style','edit',...
   'Units','pixels',...
   'Position',[210 F.fig_ht-F.tot_ht 135 F.ind_ht],...
   'String', num2str(XStimParams.abls),...
   'Callback','setInfo_abl');


%F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'Num ABLs:');

H.numabls = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[82 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.numabls),...
   'Callback','Setinfo_abl');
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'ABL Step:');

H.stepabl = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[82 F.fig_ht-F.tot_ht 60 F.ind_ht]);

%Other Stimulus Parameters
F.tot_ht = F.tot_ht + F.ind_ht *2;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht F.fig_wd F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Set Remaining Parameters');
%ITD
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'ITD (us):');

H.ITD = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.curr_ITD));
%ILD
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'ILD (dB):');

H.ILD = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.curr_ILD));

% use std hrtfs?
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[200 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'use std HRTFs?');
H.abl_useHRTF_flag(1) = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[280 F.fig_ht-F.tot_ht 20 F.ind_ht],...
   'Callback','setInfo_abl');

%DUR
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'Stim Dur (ms):');
H.DUR = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.curr_stimdur));

% use eq hrtfs
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[200 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'use eq HRTFs?');
H.abl_useHRTF_flag(2) = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[280 F.fig_ht-F.tot_ht 20 F.ind_ht],...
   'Callback','setInfo_abl');

%ISI
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 110 F.ind_ht],...
   'String', 'ISI (ms):');

H.ISI = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.test_ISI));
%NumReps
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 110 F.ind_ht],...
   'String', '# Reps:');
H.numreps = uicontrol('Style','edit',...
   'Units','pixels',...
   'Position',[112 F.fig_ht-F.tot_ht 60 F.ind_ht],...
   'String', num2str(XStimParams.numreps),...
   'Callback','SetRepText');

% increment test number
H.inc_testnum = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[200 F.fig_ht-F.tot_ht 140 F.ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','blue',...
   'FontWeight','bold',...
   'String', 'INCREMENT testnum',...
   'Callback','setInfo_abl');

% Only build files?? (do not play them out)
F.tot_ht = F.tot_ht + F.ind_ht*2;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[15 F.fig_ht-F.tot_ht 120 F.ind_ht],...
   'String', 'ONLY Build Files?');
H.abl_buildOnly = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[135 F.fig_ht-F.tot_ht 20 F.ind_ht],...
   'Callback','setInfo_abl');

%%%%%%%%%%%%%%%%%%
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht F.fig_wd F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Run Control');

%Engage TEST
F.tot_ht = F.tot_ht + F.ind_ht;
H.engageabltest = uicontrol('Style','pushbutton',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','green',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'ENGAGE',...
   'Callback','Engage_abltest');

%Record Data?
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[85 F.fig_ht-F.tot_ht 100 F.ind_ht],...
   'String', 'Record Data?');
H.recorddata = uicontrol('Style','checkbox',...
   'Units','pixels',...
   'Position',[185 F.fig_ht-F.tot_ht 20 F.ind_ht]);
H.recorddata_FN = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[85 F.fig_ht-(F.tot_ht+F.ind_ht) 100 F.ind_ht],...
   'String', FN.data);

%Reset
H.resetabltest = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[F.fig_wd-100 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','cyan',...
   'ForegroundColor','black',...
   'FontWeight','bold',...
   'String', 'Reset',...
   'Callback','reset_ABLtest');

%Pause TEST
F.tot_ht = F.tot_ht + F.ind_ht *2;
H.pauseabltest = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Pause');

%Exit
H.exitabltest = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[F.fig_wd-100 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'BackgroundColor','red',...
   'ForegroundColor','yellow',...
   'FontWeight','bold',...
   'String', 'EXIT',...
   'Callback','Exit_abltest');

%Build/Play Trials
F.tot_ht = F.tot_ht + F.ind_ht *2;
H.buildplay = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 175 F.ind_ht],...
   'BackgroundColor','yellow',...
   'ForegroundColor','blue',...
   'String', 'Build/Play Status');

%Remaining Reps and Trials
F.tot_ht = F.tot_ht + F.ind_ht;
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 120 F.ind_ht],...
   'String', 'Remaining reps:');
H.remreps = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[122 F.fig_ht-F.tot_ht 40 F.ind_ht],...
   'String', get(H.numreps,'String'));
uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[164 F.fig_ht-F.tot_ht 80 F.ind_ht],...
   'String', 'Trials:');
H.remtrials = uicontrol('Style','text',...
   'Units','pixels',...
   'Position',[246 F.fig_ht-F.tot_ht 40 F.ind_ht],...
   'String', '');

%Plotting
F.tot_ht = F.tot_ht + F.ind_ht*2;
H.plotpsd = uicontrol('Style','togglebutton',...
   'Units','pixels',...
   'Position',[0 F.fig_ht-F.tot_ht 175 F.ind_ht],...
   'BackgroundColor','blue',...
   'ForegroundColor','white',...
   'FontWeight','bold',...
   'String', 'Plot PSD');

end %end GUI specification

setInfo_abl;
%stimuli_dir = FN.temp_stim_path;

% Initialize Application and get AP2 and XBUS locks
if(S232('S2init', 0, 'INIT_PRIMARY', 10000) == 0)
   disp('Cannot initialize a secondary process')
   return;
end

if(S232('APlock', 100, 0) == 0)
  disp('Cannot acquire lock on AP2 Card')
  s232('S2close');
  return;
end

if(S232('XBlock', 100, 0) == 0)
  disp('Cannot acquire lock on X Bus')
  s232('APunlock', 0);
  s232('S2close');
  return;
end
